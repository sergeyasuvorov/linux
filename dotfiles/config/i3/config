set $mod Mod4

# Configure border style <normal|1pixel|pixel xx|none|pixel>
default_border pixel 3
default_floating_border normal

# # Hide borders
hide_edge_borders none

# # change borders
bindsym $mod+u border none
bindsym $mod+y border pixel 3
bindsym $mod+n border normal

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango:monospace 13
#font pango:Iosevka Aile 13
font pango: Liberation 13

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- $HOME/.bin/lock_blur.sh --nofork

exec --no-startup-id nm-applet
exec --no-startup-id nitrogen --restore; sleep 1;
#exec --no-startup-id dropbox start
exec --no-startup-id skypeforlinux
exec --no-startup-id "sleep 2; slack"
exec --no-startup-id telegram-desktop
exec --no-startup-id volumeicon
exec --no-startup-id "sleep 3; google-chrome-stable"
exec --no-startup-id "alacritty -t 'neomutt' -e neomutt"
exec --no-startup-id "sleep 2; alacritty -t 'calcurse' -e calcurse"
#exec --no-startup-id "alacritty -t 'cmus' -e cmus"
exec --no-startup-id emacs

# Keyboard
exec --no-startup-id setxkbmap -model pc105 -layout "us,ru" -option "grp:ctrl_shift_toggle"
exec --no-startup-id numlockx

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+q kill

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# start dmenu (a program launcher)
#bindsym $mod+d exec --no-startup-id dmenu_run -fn "-xos4-terminus-medium-r-*-*-14-*"
bindsym $mod+d exec rofi -modi drun -show drun -display-drun "Apps : " -line-padding 4 \
                -columns 2 -padding 50 -hide-scrollbar \
                -show-icons -drun-icon-theme "Arc-X-D" -font "Noto Sans Regular 11"

## rofi bindings for window menu (two bindings F10/$mod+t)
bindsym $mod+t exec rofi -show window -display-window "Window : " -line-padding 4 \
                -lines 10 -padding 50 -hide-scrollbar \
                -show-icons -drun-icon-theme "Arc-X-D" -font "Noto Sans Regular 11"
# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

focus_follows_mouse no

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

#bindsym $mod+b bar mode toggle

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 1:emacs
set $ws2 2:term
set $ws3 3:dev
set $ws4 4:rdp
set $ws5 5:
set $ws6 6:av
set $ws7 7:web
set $ws8 8:mail
set $ws9 9:skype
set $ws10 10:comm

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

assign [class="^emacs$"] $ws1
assign [class="^org.remmina.Remmina$"] $ws4
assign [title="^cmus$"] $ws6
assign [class="^Deluge-gtk$"] $ws6
assign [class="^smplayer$"] $ws6
assign [class="^Google-chrome$"] $ws7
assign [title="^neomutt$"] $ws8
assign [title="^calcurse$"] $ws8
assign [class="^Skype$"] $ws9
assign [class="^Slack$"] $ws10
assign [class="^TelegramDesktop$"] $ws10

bindsym $mod+shift+q mode "$mode_system"
set $mode_system (l)ock, (e)xit, (r)eboot, (s)hutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id i3exit lock, mode "default"
#    bindsym s exec --no-startup-id i3exit suspend, mode "default"
#    bindsym u exec --no-startup-id i3exit switch_user, mode "default"
    bindsym e exec --no-startup-id i3exit logout, mode "default"
#    bindsym h exec --no-startup-id i3exit hibernate, mode "default"
    bindsym r exec --no-startup-id i3exit reboot, mode "default"
    bindsym s exec --no-startup-id i3exit shutdown, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

gaps inner 5 
gaps outer 3

# Additionally, you can issue commands with the following syntax. This is useful to bind keys to changing
#  the gap size.
# gaps inner|outer current|all set|plus|minus <px>
# gaps inner all set 10
# gaps outer all plus 5

# Smart gaps (gaps used if only more than one container on the workspace)
smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace)
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
smart_borders on

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
	#tray_output none
	position top
        status_command i3status -c $HOME/.config/i3/i3status
	strip_workspace_numbers yes
}

exec --no-startup-id $HOME/.bin/disable_startup_urgency.sh

exec --no-startup-id xset dpms 3600 3600 3600 s 1800
